datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
  binaryTargets = ["native"]
}

model User {
  id          String    @id @default(uuid())
  name        String
  email       String    @unique
  password    String
  phoneNumber String
  isAdmin     Boolean   @default(false)
  addresses   Address[]
  orders      Order[]
}

model Address {
  id         String  @id @default(uuid())
  street     String
  city       String
  state      String
  zip        String
  complement String
  userId     String
  preferred  Boolean @default(false)
  user       User    @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Order {
  id              String      @id @default(uuid())
  orderNumber     Int
  createdAt       DateTime    @default(now())
  updatedAt       DateTime    @updatedAt
  paymentMethod   String
  deliveryAddress Json
  orderConfirm    Boolean     @default(false)
  finishedOrder   Boolean     @default(false)
  confirmDelivery Boolean     @default(false)
  userId          String
  user            User        @relation(fields: [userId], references: [id])
  orderItems      OrderItem[]
}

model Category {
  id        String     @id @default(uuid())
  name      String
  menuItems MenuItem[]
}

model OrderItem {
  id           String   @id @default(uuid())
  quantity     Int
  total        Float
  instructions String?
  orderId      String
  order        Order    @relation(fields: [orderId], references: [id], onDelete: Cascade)
  menuItemId   String
  menuItem     MenuItem @relation(fields: [menuItemId], references: [id])
}

model MenuItem {
  id          String      @id @default(uuid())
  name        String
  price       Float
  imageURL    String
  description String
  categoryId  String
  category    Category    @relation(fields: [categoryId], references: [id])
  orderItems  OrderItem[]
}
